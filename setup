#!/bin/bash

# Define the bin directory and create it if it doesn't exist
BIN_DIR=~/bin
mkdir -p "$BIN_DIR"

# Define the paths for the start and stop scripts
START_SCRIPT="$BIN_DIR/start_tunnel.sh"
STOP_SCRIPT="$BIN_DIR/stop_tunnel.sh"

# Create the start script
cat << 'EOF' > "$START_SCRIPT"
#!/bin/bash

mkdir -p ~/cloudflared
cd ~/cloudflared

if [ ! -f cloudflared ]; then
    curl -L https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -o cloudflared
    chmod +x cloudflared
fi

if [ ! -f ~/.cloudflared/cert.pem ]; then
    ./cloudflared login
fi

UNIQUE_TUNNEL_NAME="minecraft-tunnel-$(date +%s)"
./cloudflared tunnel create $UNIQUE_TUNNEL_NAME
TUNNEL_ID=$(./cloudflared tunnel list | grep $UNIQUE_TUNNEL_NAME | awk '{print $1}')

cat <<EOF > config.yml
tunnel: ${TUNNEL_ID}
credentials-file: /home/u227612/.cloudflared/${TUNNEL_ID}.json

ingress:
  - hostname: play.shvps.xyz
    service: tcp://localhost:25565
  - service: http_status:404
EOF

nohup ./cloudflared tunnel --config config.yml run $UNIQUE_TUNNEL_NAME > ~/cloudflared/tunnel.log 2>&1 &
echo $! > ~/cloudflared/tunnel.pid
echo "Tunnel started in the background with PID $(cat ~/cloudflared/tunnel.pid)"
EOF

# Create the stop script
cat << 'EOF' > "$STOP_SCRIPT"
#!/bin/bash

if [ -f ~/cloudflared/tunnel.pid ]; then
    kill $(cat ~/cloudflared/tunnel.pid)
    rm ~/cloudflared/tunnel.pid
    rm ~/cloudflared/tunnel.log
    echo "Tunnel stopped and cleaned up."
else
    echo "No tunnel PID file found. Is the tunnel running?"
fi
EOF

# Make both scripts executable
chmod +x "$START_SCRIPT"
chmod +x "$STOP_SCRIPT"

echo "Start and stop scripts have been deployed to ~/bin/"
